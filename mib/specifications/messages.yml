openapi: "3.0.1"
info:
  title: Messages Service API
  description: Messages Microservice of Message in a Bottle Application
  version: "0.1"

servers:
  - url: /

paths:
  /message:
    post:
      summary: Add a new message
      tags:
        - Message
      operationId: mib.resources.messages.create_message
      requestBody:
        description: Create a new message inside microservice app
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageFields'
      responses:
        201:
          description: Returns the created message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: Error creating the message

  /message/{message_id}:
    get:
      summary: Get the message with id = message_id
      tags:
        - Message
      operationId: mib.resources.messages.get_message_by_id
      parameters:
        - name: message_id
          description: Message unique id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Get the message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        404:
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound'
        default:
          description: Error getting the requested messages
    put:
      summary: Update the message with id = message_id
      tags:
        - Message
      operationId: mib.resources.messages.update_message
      parameters:
        - name: message_id
          description: Message unique id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageFields'
        description: Update the message inside microservice app
        required: true
       
      responses:
        200:
          description: Returns the updated message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        404:
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound'
        default:
          description: Error updating the message
    delete:
      summary: Delete the message with id = message_id
      tags:
        - Message
      operationId: mib.resources.messages.delete_message_by_id
      parameters:
        - name: message_id
          description: Message unique id
          in: path
          required: true
          schema:
            type: integer
      responses:
        202:
          description: Message deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Result status
                    default: success
                  message:
                    type: string
                    description: Result message
                    default: Successfully deleted
        404:
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotFound'
        default:
          description: Error deleting the requested message

  /search:
    post:
      summary: Returns the searched messages
      tags: [ Messages ]
      operationId: mib.resources.messages.search_message
      requestBody:
        description: Fields to search in the messages for the user with 'user_email' and 'user_id'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
      responses:
        200:
          description: Returns a list of the searched messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredMessages'
        default:
          description: Error searching the messages

  /inbox:
    get:
      summary: Get the inbox messages
      tags:
        - Mailbox
      operationId: mib.resources.messages.get_inbox_messages
      requestBody:
        description: Inbox messages for the user with 'user_email' and 'user_id'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Box'

      responses:
        200:
          description: Returns the list of inbox messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        default:
          description: Error getting inbox messages
          
  /sent:
    get:
      summary: Get the sent messages
      tags:
        - Mailbox
      operationId: mib.resources.messages.get_sent_messages
      requestBody:
        description: Sent messages for the user with 'user_email' and 'user_id'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Box'
      responses:
        200:
          description: Returns the list of sent messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        default:
          description: Error getting sent messages
                    
  /draft:
    get:
      summary: Get the draft messages
      tags:
        - Mailbox
      operationId: mib.resources.messages.get_draft_messages
      requestBody:
        description: Draft messages for the user with 'user_email' and 'user_id'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Box'
      responses:
        200:
          description: Returns the list of draft messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        default:
          description: Error getting draft messages
          
  /scheduled:
    get:
      summary: Get the scheduled messages
      tags:
        - Mailbox
      operationId: mib.resources.messages.get_scheduled_messages
      requestBody:
        description: Scheduled messages for the user with 'user_email' and 'user_id'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Box'
      responses:
        200:
          description: Returns the list of scheduled messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        default:
          description: Error getting scheduled messages

  /notifications:
    get:
      summary: Get the number of notifications
      tags:
        - Notifications
      operationId: mib.resources.messages.get_notifications
      requestBody:
        description: Notification number for the user with 'user_email' and 'user_id'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Box'
      responses:
        200:
          description: Returns the number of notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
        default:
          description: Error counting the notifications

components:
  schemas:
    Message:
      required:
        - status
        - message
        - body
      type: object
      properties:
        status:
          type: string
          description: status code message
          example: success
        message: 
          type: string
          description: operation result
          example: Operation done
        body:
          $ref: '#/components/schemas/MessageFields'
    
    MessageNotFound:
      required:
        - status
        - message
      type: object
      properties:
        status:
          type: string
          description: status code message
          default: failure
        message: 
          type: string
          description: operation result
          default: Message not found

    Messages:
      required:
        - status
        - message
        - body
      type: object
      properties:
        status:
          type: string
          description: status code message
          default: success
        message: 
          type: string
          description: operation result
          default: Successfully delivered list
        body:
          type: "array"
          items:
            $ref: '#/components/schemas/MessageFields'

    FilteredMessages:
      required:
        - status
        - message
        - body
      type: object
      properties:
        status:
          type: string
          description: status code message
          default: success
        message: 
          type: string
          description: operation result
          default: Successfully searched
        body:
          required:
            - filtered_inbox
            - filtered_sent
            - filtered_scheduled
          type: object
          properties:
            filtered_inbox:
              description: messages in inbox that match the filter
              type: array
              items:
                $ref: '#/components/schemas/MessageFields'
            filtered_sent:
              description: messages in sent that match the filter
              type: "array"
              items:
                $ref: '#/components/schemas/MessageFields'
            filtered_scheduled:
              description: messages in scheduled that match the filter
              type: "array"
              items:
                $ref: '#/components/schemas/MessageFields'
          
            
    MessageFields:
      required:
        - id
        - sender
        - sender_id
        - receiver_id
        - receiver
        - body
        - timestamp
        - draft
        - scheduled
        - sent
        - read
        - bold
        - italic
        - underline
        - deleted
      type: "object"
      properties:
        id:
          type: integer
          description: Unique id of the message
          example: 1
        sender_id:
          type: integer
          description: Unique id of the user
          example: 1
        sender: 
          type: string
          description: email of sender
          example: example@example.com
        receiver_id:
          type: integer
          description: Unique id of the user
          example: 2
        receiver:
          type: string
          description: email of receiver
          example: example1@example1.com
        body:
          type: string
          description: The body of the message
          example: hi, how are you?
        photo:
          type: string
          description: The photo encoded as a string
          example: base64encoded
        timestamp:
          type: string
          description: The timestamp of the message
          example: 12/12/2021:12:12
        draft:
          type: boolean
          description: Flag indicating if the message is draft 
          example: True
        scheduled:
          type: boolean
          description: Flag indicating if the message is scheduled 
          example: False
        sent:
          type: integer
          description: Indicates if the message has been sent and/or if it has been notified  
          example: 0
        read:
          type: integer
          description: Flag indicating if the message has been read 
          example: 0
        bold:
          type: boolean
          description: Flag indicating if the message has bold text
          example: True
        italic:
          type: boolean
          description: Flag indicating if the message has italic text
          example: True
        underline:
          type: boolean
          description: Flag indicating if the message has underlined text
          example: True
        deleted:
          type: integer
          description: Deleted value (hide message) for sender (2) or receiver (1)
          example: 0

    Search:
      required:
        - user_id
        - user_email
      type: object
      properties:
        user_id:
          type: integer
          description: unique id of requester user
          example: 1
        user_email:
          type: string
          description: unique email of the requester user
          example: example@example.com
        body:
          type: string
          description: body of the messge
          example: Hi, how are you?
        email:
          type: string
          description: email of the receiver or email of the sender
          example: example1@example1.com
        date:
          type: string
          description: The date of the message
          example: 03/03/2021
    Box:
      required:
        - user_id
        - user_email
      type: object
      properties:
        user_id:
          type: integer
          description: unique id of requester user
          example: 1
        user_email:
          type: string
          description: unique email of the requester user
          example: example@example.com

    Notifications:
      required:
        - status
        - message
        - body
      type: object
      properties:
        status:
          type: string
          description: status code message
          default: success
        message: 
          type: string
          description: operation result
          default: Successfully delivered notifications
        body:
          type: "object"
          properties:
            inbox:
              type: integer
              description: Number of not read messages
              example: 2
            sent: 
              type: integer
              description: Number of read messages by the receiver
              example: 3